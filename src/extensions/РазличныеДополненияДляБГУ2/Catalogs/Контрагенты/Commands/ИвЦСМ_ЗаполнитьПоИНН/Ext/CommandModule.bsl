#Область ОбработчикиСобытий

&НаКлиенте
Процедура ОбработкаКоманды(ПараметрКоманды, ПараметрыВыполненияКоманды)
	Контекст = "Справочники.Контрагенты.Команды.ИвЦСМ_ЗаполнитьПоИНН.ОбработкаКоманды";
	
	Если ТипЗнч(ПараметрКоманды) = Тип("Массив") Тогда
		МассивКонтрагентов = ПараметрКоманды;
	Иначе
		МассивКонтрагентов = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(ПараметрКоманды);
	КонецЕсли;

	Для Каждого Контрагент Из МассивКонтрагентов Цикл 
		ЗаполнитьРеквизитыКонтрагентаПоИНН(Контрагент);
		//Оповестить("ИзменениеЮридическогоФизическогоЛица", Контрагент.ЮридическоеФизическоеЛицо);
	КонецЦикла;
                                     
	//ОписаниеОшибки = "";
	//ЗаполнитьРеквизитыПоИНННаСервере(ПараметрКоманды, ОписаниеОшибки);

	//ЗаполнитьРеквизитыКонтрагентовПоИНННаСервере(ПараметрКоманды);
	
	//Если ЗначениеЗаполнено(ОписаниеОшибки) Тогда
	//	// Обработка ошибок
	//	Если ОписаниеОшибки = "НеУказаныПараметрыАутентификации" Тогда
	//		ТекстВопроса = НСтр("ru='Для автоматического заполнения реквизитов контрагентов
	//			|необходимо подключиться к Интернет-поддержке пользователей.
	//			|Подключиться сейчас?'");
	//		ОписаниеОповещения = Новый ОписаниеОповещения("ПодключитьИнтернетПоддержку", ЭтотОбъект);
	//		ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
	//	Иначе
	//		ПоказатьПредупреждение(, ОписаниеОшибки);
	//	КонецЕсли;
		
	//ИначеЕсли Объект.ВидКонтрагента = ПредопределенноеЗначение("Перечисление.ЮрФизЛицо.ЮрЛицо") Тогда
	//	// Проверка юридического лица по данным сервиса ИФНС после заполнения реквизитов (мог измениться КПП).
	//	ПроверкаКонтрагентовКлиент.ЗапуститьПроверкуКонтрагентаВСправочнике(ЭтотОбъект);
	//КонецЕсли;
	
	// ИнтернетПоддержкаПользователей.СПАРКРиски
	//ЭтотОбъект.ИндексыСПАРКРиски = Неопределено;
	// Конец ИнтернетПоддержкаПользователей.СПАРКРиски

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗаполнитьРеквизитыКонтрагентаПоИНН(Контрагент)

	Если Контрагент.ВидКонтрагента = Перечисления.ЮрФизЛицо.ЮрЛицо Тогда
		ЗаполнитьРеквизитыЮридическогоЛицаПоИНН(Контрагент);
	Иначе
		ЗаполнитьРеквизитыПредпринимателяПоИНН(Контрагент);
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ЗаполнитьРеквизитыПредпринимателяПоИНН(Контрагент)
	Контекст = "Справочники.Контрагенты.Команды.ИвЦСМ_ЗаполнитьПоИНН.ЗаполнитьРеквизитыПредпринимателяПоИНН";
	
	РеквизитыКонтрагента = РаботаСКонтрагентами.РеквизитыПредпринимателяПоИНН(Контрагент.ИНН);
	
	НачатьТранзакцию();
	Попытка
		КонтрагентОбъект = Контрагент.ПолучитьОбъект();

		ФизическоеЛицо = КонтрагентОбъект.ЮридическоеФизическоеЛицо;
		ФизическоеЛицоОбъект = ФизическоеЛицо.ПолучитьОбъект();
		
		ГражданствоФизическихЛиц = РегистрыСведений.ГражданствоФизическихЛиц.СоздатьМенеджерЗаписи();
		ГражданствоФизическихЛиц.ФизическоеЛицо = ФизическоеЛицо;
		Запрос = Новый Запрос;
		Запрос.Текст = "
		|ВЫБРАТЬ ПЕРВЫЕ 1
		|	РегистрСведений.Период
		|ИЗ
		|	РегистрСведений.ГражданствоФизическихЛиц КАК РегистрСведений
		|ГДЕ
		|	ФизическоеЛицо = &ФизическоеЛицо
		|УПОРЯДОЧИТЬ ПО
		|	РегистрСведений.Период УБЫВ";
		Запрос.УстановитьПараметр("ФизическоеЛицо", ФизическоеЛицо);
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() Тогда
			ГражданствоФизическихЛиц.Период = Выборка.Период;
			ГражданствоФизическихЛиц.Прочитать();
		КонецЕсли;
	
		ФИОФизическихЛиц = РегистрыСведений.ФИОФизическихЛиц.СоздатьМенеджерЗаписи();
		ФИОФизическихЛиц.ФизическоеЛицо = ФизическоеЛицо;
		Запрос = Новый Запрос;
		Запрос.Текст = "
		|ВЫБРАТЬ ПЕРВЫЕ 1
		|	РегистрСведений.Период
		|ИЗ
		|	РегистрСведений.ФИОФизическихЛиц КАК РегистрСведений
		|ГДЕ
		|	ФизическоеЛицо = &ФизическоеЛицо
		|УПОРЯДОЧИТЬ ПО
		|	РегистрСведений.Период УБЫВ";
		Запрос.УстановитьПараметр("ФизическоеЛицо", ФизическоеЛицо);
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() Тогда
			ФИОФизическихЛиц.Период = Выборка.Период;
			ФИОФизическихЛиц.Прочитать();
		КонецЕсли;
	
		ЗаполнитьЗначенияСвойств(КонтрагентОбъект, РеквизитыКонтрагента);
		КонтрагентОбъект.ВидКонтрагента = Перечисления.ЮрФизЛицо.ФизЛицо;
		КонтрагентОбъект.ТипКонтрагента = Справочники.ТипыКонтрагентов.НайтиПоКоду("6");
		КонтрагентОбъект.КПП = "";

		ЗаполнитьЗначенияСвойств(ФИОФизическихЛиц, РеквизитыКонтрагента);
		Если НЕ ЗначениеЗаполнено(ФИОФизическихЛиц.Период) Тогда
			ФИОФизическихЛиц.Период = РеквизитыКонтрагента.ДатаРегистрации;
		КонецЕсли;
		ФИОФизическихЛиц.Записать();
		
		ЗаполнитьЗначенияСвойств(ГражданствоФизическихЛиц, РеквизитыКонтрагента);
		Если НЕ ЗначениеЗаполнено(ГражданствоФизическихЛиц.Период) Тогда
			ГражданствоФизическихЛиц.Период = РеквизитыКонтрагента.ДатаРегистрации;
		КонецЕсли;
		ГражданствоФизическихЛиц.Записать();
		
		ЗаполнитьЗначенияСвойств(ФизическоеЛицоОбъект, РеквизитыКонтрагента);
		ФизическоеЛицоОбъект.ОГРНИП = РеквизитыКонтрагента.РегистрационныйНомер;
		ФизическоеЛицоОбъект.Пол = ?(РеквизитыКонтрагента.Пол = "1",
			Перечисления.ПолФизическогоЛица.Мужской, Перечисления.ПолФизическогоЛица.Женский);
		Если НЕ РеквизитыКонтрагента.СвидетельствоОРегистрации = Неопределено Тогда
			ФизическоеЛицоОбъект.СвидетельствоСерияНомер =
				РеквизитыКонтрагента.СвидетельствоОРегистрации.Серия + " " + РеквизитыКонтрагента.СвидетельствоОРегистрации.Номер; 
			ФизическоеЛицоОбъект.СвидетельствоДата = РеквизитыКонтрагента.СвидетельствоОРегистрации.Дата;
		КонецЕсли;
		ФизическоеЛицоОбъект.Наименование = СокрП(ФИОФизическихЛиц.Фамилия+" "+ФИОФизическихЛиц.Имя+" "+ФИОФизическихЛиц.Отчество);

		КонтрагентОбъект.КонтактнаяИнформация.Загрузить(ФизическоеЛицоОбъект.КонтактнаяИнформация.Выгрузить());
		
		ФизическоеЛицоОбъект.Записать();
		КонтрагентОбъект.Записать();
		
		ЗафиксироватьТранзакцию();
		
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Заполнены реквизиты контрагента ""%2"" по ИНН.
				|
				|Контекст ""%1""'",
				ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка()),
			Контекст,
			Строка(Контрагент));
		ЗаписьЖурналаРегистрации("Заполнение реквизитов по ИНН",
			УровеньЖурналаРегистрации.Информация,
			Метаданные.НайтиПоТипу(ТипЗнч(Контрагент)), Контрагент,
			ТекстСообщения);

	Исключение
		ОтменитьТранзакцию();

		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Не удалось заполнить реквизиты контрагента ""%2"" по ИНН.
				|Возможно данные редактируются другим пользователем.'",
				ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка()),
			Контекст,
			Строка(Контрагент));
		ЗаписьЖурналаРегистрации("Заполнение реквизитов по ИНН",
			УровеньЖурналаРегистрации.Ошибка,
			Метаданные.НайтиПоТипу(ТипЗнч(Контрагент)), Контрагент,
			ТекстСообщения);
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, Контрагент);
		ВызватьИсключение ТекстСообщения;
	КонецПопытки;

КонецПроцедуры

&НаСервере
Процедура ЗаполнитьРеквизитыЮридическогоЛицаПоИНН(Контрагент)
	Контекст = "Справочники.Контрагенты.Команды.ИвЦСМ_ЗаполнитьПоИНН.ЗаполнитьРеквизитыЮридическогоЛицаПоИНН";
	
	//РеквизитыКонтрагентаВИБ = ОбщегоНазначения.ЗначениеРеквизитаОбъектов(Контрагент, "ВидКонтрагента, ИНН, ЮридическоеФизическоеЛицо");
	
	ЭтоЮридическоеЛицо = Контрагент.ВидКонтрагента = Перечисления.ЮрФизЛицо.ЮрЛицо;
	
	Если ЭтоЮридическоеЛицо Тогда
		РеквизитыКонтрагента = РаботаСКонтрагентами.РеквизитыЮридическогоЛицаПоИНН(Контрагент.ИНН);
	Иначе
		РеквизитыКонтрагента = РаботаСКонтрагентами.РеквизитыПредпринимателяПоИНН(Контрагент.ИНН);
		РеквизитыКонтрагента.Вставить("КПП", "");
	КонецЕсли;
	
	//Если ЗначениеЗаполнено(РеквизитыКонтрагента.ОписаниеОшибки) Тогда
	//	ОписаниеОшибки = РеквизитыКонтрагента.ОписаниеОшибки;
	//	Возврат;
	//КонецЕсли;
	
	КонтрагентОбъект = Контрагент.ПолучитьОбъект();
	Попытка
		КонтрагентОбъект.Записать();
	Исключение
		ВызватьИсключение;
		//Предупреждение(НСтр("ru = 'Не обнаружены реквизиты подключения к узлу информационной базы ""%2"".
		//	|(в регистре НастройкиТранспортаОбмена).
		//	|Переход к сопоставленному объекту невозможен.
		//	|
		//	|Контекст ""%1""'",
		//	ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка()),

		//
		//
		//НСтр("ru = 'Не удалось записать объект';"
		//   + " en = 'Can't write the object'") 
		//   + " '" + Объект + '"!
		//   |"+ ОписаниеОшибки(),60);
	КонецПопытки;
	КонтрагентОбъект = Неопределено;
	
	//Если ЭтоЮридическоеЛицо Тогда
	//	ПроверитьЗаполнитьДаннеЮрФзЛица(РеквизитыКонтрагента, ОписаниеОшибки, Контрагент.ЮридическоеФизическоеЛицо, Контрагент);
	//	//ПроверитьЮридическоеЛицоНаСервере();
	//Иначе
	//	ПроверитьЗаполнитьДаннеЮрФзЛица(РеквизитыКонтрагента, ОписаниеОшибки, Контрагент.ЮридическоеФизическоеЛицо, Контрагент);
	//КонецЕсли;

КонецПроцедуры

//&НаСервере
//Процедура ПроверитьЗаполнитьДаннеЮрФзЛица(РеквизитыКонтрагента, ОписаниеОшибки, СсылкаЮрФизЛица, КонтрагентСсылка)
//	                     
//	РезультатПроверки = Корреспонденты.ПроверитьОпределитьКонтрагентаЮрФизЛицо(РеквизитыКонтрагента.ИНН, РеквизитыКонтрагента.КПП, СсылкаЮрФизЛица, КонтрагентСсылка); 
//	
//	Если НЕ РезультатПроверки.ВидКонтрагента = КонтрагентСсылка.ВидКонтрагента И ЗначениеЗаполнено(РезультатПроверки.ЮрФизЛицоСсылка) Тогда
//		// Нашли юрлицо или физлицо с ошибкой заполнения
//		ОписаниеОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'При попытке заполнения котрагента, имеющего вид ""%1"",
//			|в справочнике ""%2"" обнаружен элемент с  ИНН %3.
//			|Заполнение реквизитов невозможно! 
//			|'"), Объект.ВидКонтрагента, РезультатПроверки.ВидКонтрагента, РеквизитыКонтрагента.ИНН);
//		Возврат;
//	КонецЕсли;
//	
//	Если РезультатПроверки.Корректен Тогда 
//		//проверка прошла успешно, можно заполнять
//		ОписаниеОшибки = "";
//		Если РезультатПроверки.ЕстьКонтрагент = Ложь И ЗначениеЗаполнено(РезультатПроверки.ЮрФизЛицоСсылка) Тогда
//			СсылкаЮрФизЛица 			 		= РезультатПроверки.ЮрФизЛицоСсылка;
//			Объект.ЮридическоеФизическоеЛицо 	= РезультатПроверки.ЮрФизЛицоСсылка;
//		КонецЕсли; 
//		
//	ИначеЕсли НЕ РезультатПроверки.ЕстьКонтрагент И ЗначениеЗаполнено(РезультатПроверки.ЮрФизЛицоСсылка) Тогда
//		//нашли "свободное" юрлицо с указанными ИНН и КПП надо поменять ссылку и можно заполнять
//		
//		ОписаниеОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'В базе данных обнаружено еще записей %3 с ИНН %1, КПП %2!
//			|Наличие контрагентов с одинаковыми ИНН и КПП может привести 
//			|к некорректной работе некоторых механизмов программы.
//			|'"), РеквизитыКонтрагента.ИНН, РеквизитыКонтрагента.КПП, РезультатПроверки.ЕстьДанные);
//			
//		ЗначениеВРеквизитФормы(РезультатПроверки.ЮрФизЛицоСсылка.ПолучитьОбъект(), РеквизитФормыОбъект);
//		СсылкаЮрФизЛица 			 		= РезультатПроверки.ЮрФизЛицоСсылка;
//		Объект.ЮридическоеФизическоеЛицо 	= РезультатПроверки.ЮрФизЛицоСсылка;
//		
//	ИначеЕсли Объект.ЮридическоеФизическоеЛицо = РезультатПроверки.ЮрФизЛицоСсылка И Объект.Ссылка = РезультатПроверки.КонтрагентСсылка Тогда
//		//есть дубли, надо будет спросить
//		ОписаниеОшибки = "ЕстьДублиИННКПП";
//				
//	Иначе
//		
//		ОписаниеОшибки = "Введены некорретные данные.";

//		Возврат;

//	КонецЕсли;	
//	
//	Если РеквизитФормыОбъект = "ЮридическоеЛицо" Тогда 
//		
//		РеквизитыКонтрагента.Вставить("ОГРН", РеквизитыКонтрагента.РегистрационныйНомер);
//		
//	Иначе	
//		РеквизитыКонтрагента.Вставить("ОГРНИП", РеквизитыКонтрагента.РегистрационныйНомер);
//		РеквизитыКонтрагента.Вставить("Пол", ?(РеквизитыКонтрагента.Пол = "1", Перечисления.ПолФизическогоЛица.Мужской, Перечисления.ПолФизическогоЛица.Женский));
//		
//		Если НЕ РеквизитыКонтрагента.СвидетельствоОРегистрации = Неопределено Тогда
//			РеквизитыКонтрагента.Вставить("СвидетельствоСерияНомер", РеквизитыКонтрагента.СвидетельствоОРегистрации.Серия + " " + РеквизитыКонтрагента.СвидетельствоОРегистрации.Номер); 
//			РеквизитыКонтрагента.Вставить("СвидетельствоДата", РеквизитыКонтрагента.СвидетельствоОРегистрации.Дата);
//		КонецЕсли;
//		
//		ЗаполнитьЗначенияСвойств(ФИОФизическихЛиц, РеквизитыКонтрагента);
//		Если НЕ ЗначениеЗаполнено(ФИОФизическихЛиц.Период) Тогда
//			ФИОФизическихЛиц.Период = РеквизитыКонтрагента.ДатаРегистрации;
//		КонецЕсли;
//		
//		Если НЕ ЗначениеЗаполнено(ГражданствоФизическихЛиц.Период) Тогда
//			ГражданствоФизическихЛиц.Период = РеквизитыКонтрагента.ДатаРегистрации;
//		КонецЕсли;
//		
//		РеквизитыКонтрагента.Вставить("ТипКонтрагента", Справочники.ТипыКонтрагентов.НайтиПоКоду("6"));

//	КонецЕсли;	
//		
//	ЗаполнитьЗначенияСвойств(ЭтотОбъект[РеквизитФормыОбъект], РеквизитыКонтрагента);
//	ЗаполнитьЗначенияСвойств(Объект, РеквизитыКонтрагента);
//	
//	Если РеквизитФормыОбъект = "ЮридическоеЛицо" Тогда
//		ЗаполнитьЭлементКонтактнойИнформации(Справочники.ВидыКонтактнойИнформации.ЮридическийАдресКонтрагенты, РеквизитыКонтрагента["ЮридическийАдрес"]);
//		ЗаполнитьЭлементКонтактнойИнформации(Справочники.ВидыКонтактнойИнформации.ТелефонКонтрагенты, РеквизитыКонтрагента["Телефон"]);
//	КонецЕсли;

//	Если Объект.ВидКонтрагента = ПредопределенноеЗначение("Перечисление.ЮрФизЛицо.ЮрЛицо") Тогда
//		ПроверитьЮридическоеЛицоНаСервере();
//	ИначеЕсли Объект.ВидКонтрагента = ПредопределенноеЗначение("Перечисление.ЮрФизЛицо.ФизЛицо") И ПравоДоступа("Чтение", Метаданные.Справочники.ФизическиеЛица) Тогда
//		ПроверитьФизическоеЛицоНаСервере();
//	КонецЕсли;	
//	
//	Модифицированность = Истина;

//КонецПроцедуры	

#КонецОбласти
